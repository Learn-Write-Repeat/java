Primitive Data Types
A primitive data type specifies the size and type of variable values, and it has no additional methods.
There are eight primitive data types in Java:
Data Type	Size	Description
byte	1 byte	Stores whole numbers from -128 to 127
short	2 bytes	Stores whole numbers from -32,768 to 32,767
int	4 bytes	Stores whole numbers from -2,147,483,648 to 2,147,483,647
long	8 bytes	Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
float	4 bytes	Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits
double	8 bytes	Stores fractional numbers. Sufficient for storing 15 decimal digits
boolean	1 bit	Stores true or false values
char	2 bytes	Stores a single character/letter or ASCII values
________________________________________
Numbers
Primitive number types are divided into two groups:
Integer types stores whole numbers, positive or negative (such as 123 or -456), without decimals. Valid types are byte, short, int and long. Which type you should use, depends on the numeric value.
Floating point types represents numbers with a fractional part, containing one or more decimals. There are two types: float and double.
Integer Types
Byte
The byte data type can store whole numbers from -128 to 127. This can be used instead of int or other integer types to save memory when you are certain that the value will be within -128 and 127:
public class Main {
  public static void main(String[] args) {
    byte myNum = 100;
    System.out.println(myNum);  
  }
}
Short:
public class Main {
  public static void main(String[] args) {
    short myNum = 5000;
    System.out.println(myNum);  
  }
}
Int:
public class Main {
  public static void main(String[] args) {
    int myNum = 100000;
    System.out.println(myNum);  
  }
}
Long:
public class Main {
  public static void main(String[] args) {
    long myNum = 15000000000L;
    System.out.println(myNum);  
  }
}
Floating Point Types
You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.
Float
The float data type can store fractional numbers from 3.4e−038 to 3.4e+038. Note that you should end the value with an "f":
public class Main {
  public static void main(String[] args) {
    float myNum = 5.75f;
    System.out.println(myNum);  
  }
}

Double
The double data type can store fractional numbers from 1.7e−308 to 1.7e+308. Note that you should end the value with a "d":
public class Main {
  public static void main(String[] args) {
    double myNum = 19.99d;
    System.out.println(myNum);  
  }
}
Scientific Numbers
A floating point number can also be a scientific number with an "e" to indicate the power of 10:
public class Main {
  public static void main(String[] args) {
    float f1 = 35e3f;
    double d1 = 12E4d;
    System.out.println(f1);
    System.out.println(d1);  
  }
}
Booleans
A boolean data type is declared with the boolean keyword and can only take the values true or false:
public class Main {
  public static void main(String[] args) {
    boolean isJavaFun = true;
    boolean isFishTasty = false;    
    System.out.println(isJavaFun);
    System.out.println(isFishTasty);
  }
}
Characters
The char data type is used to store a single character. The character must be surrounded by single quotes, like 'A' or 'c':
public class Main {
  public static void main(String[] args) {
    char myGrade = 'B';
    System.out.println(myGrade);
  }
}
Strings
The String data type is used to store a sequence of characters (text). String values must be surrounded by double quotes:
Example
public class Main {
  public static void main(String[] args) {
    String greeting = "Hello World";
    System.out.println(greeting);
  }
}

